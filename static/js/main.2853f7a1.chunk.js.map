{"version":3,"sources":["pages/HuffmanCoding/components/GraphGenerator/index.js","pages/HuffmanCoding/index.js","App.js","index.js","pages/HuffmanCoding/components/GraphGenerator/styles.module.css"],"names":["generateCols","obj","a","b","count","character","String","props","generationArray","className","Styles","mainCont","tree","comparatorObj","useState","text","setText","setGenerationArray","useEffect","generationTreeObject","initialHuffmanArray","buffer","map","val","iterCount","length","sort","last","pop","prevLast","newObj","push","getGenerationArray","mapOfFrequency","i","char","charAt","Object","keys","stats","comparator","key","getInitialHuffmanArray","type","value","onChange","e","res","target","replace","GraphGenerator","App","HuffmanCoding","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yPASA,SAASA,EAAaC,GACrB,MAAiCA,GAAO,GAAjCC,EAAP,EAAOA,EAAGC,EAAV,EAAUA,EAAGC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,UACpB,OAAIJ,GAAQG,EAGX,+BACC,+BAAQE,OAAOF,KACf,+BAEIF,GAAKC,EAEJ,KADA,+BAAQG,OAAOD,GAAa,MAG/BL,EAAaE,GACbF,EAAaG,SAZS,KAkBZ,eAACI,GACZ,IACIC,EACAD,EADAC,gBAKJ,OACF,qBAAKC,UAAWC,IAAOC,SAAvB,SACC,qBAAKF,UAAWC,IAAOE,KAAvB,SACC,6BACEZ,EAAaQ,EAAgB,WC/B7BK,EAAgB,SAACX,EAAGC,GACtB,OAAGD,EAAEE,QAAUD,EAAEC,MAAc,EAC5BF,EAAEE,MAAQD,EAAEC,OAAe,EACvB,GA2DI,iBACX,MAAwBU,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8CF,mBAAS,IAAvD,mBAAON,EAAP,KAAwBS,EAAxB,KAQA,OANAC,qBAAU,WACN,IACMC,EAjCd,SAA4BC,GAKxB,IAJA,IAAMC,EAASD,EAAoBE,KAAI,SAAAC,GAAG,OAAIA,KAE1CC,EAAY,EAETH,EAAOI,OAAS,GAAKD,EAHZ,KAGiC,CAC7CA,IAGAH,EAAOK,KAAKb,GAGZ,IAAMc,EAAON,EAAOO,MACdC,EAAWR,EAAOO,MAClBE,EAAS,CACX5B,EAAG2B,EACH1B,EAAGwB,EACHvB,MAAOyB,EAASzB,MAAQuB,EAAKvB,OAIjCiB,EAAOU,KAAKD,GAGhB,OAAOT,EAS0BW,CAxDN,SAACjB,GAC5B,IAAIA,GAAiB,KAATA,EAAa,MAAO,GAGhC,IAFA,IAAMkB,EAAiB,GAEdC,EAAI,EAAGA,EAAInB,EAAKU,OAAQS,IAAK,CAClC,IAAMC,EAAOpB,EAAKqB,OAAOF,GAEtBD,EAAeE,GACdF,EAAeE,GAAM/B,QAErB6B,EAAeE,GAAQ,CAAE/B,MAAO,GAUxC,OAN4BiC,OAAOC,KAAKL,GACnCP,MAAK,SAACxB,EAAGC,GAAJ,OArBK,SAACD,EAAGC,EAAGoC,GACtB,OAAGA,EAAMrC,GAAGE,QAAUmC,EAAMpC,GAAGC,MAAc,EAC1CmC,EAAMrC,GAAGE,MAAQmC,EAAMpC,GAAGC,OAAe,EACrC,EAkBaoC,CAAWtC,EAAGC,EAAG8B,MAChCX,KAAI,SAAAmB,GACD,MAAO,CAACrC,MAAO6B,EAAeQ,GAAKrC,MAAOC,UAAWoC,MAsClCC,CAAuB3B,IAE9CE,EAAmBE,KACpB,CAACJ,IAGA,gCACI,uBACI4B,KAAK,OACLC,MAAQ7B,EACR8B,SAAU,SAACC,GAEP,IACMC,EADUzC,OAAOwC,EAAEE,OAAOJ,OAAS,IACrBK,QAAQ,kBAAmB,IAC/CjC,EAAQ+B,MAGhB,uBACA,cAACG,EAAD,CAAgB1C,gBAAkBA,QCxFzB2C,E,4JACjB,WACI,OACI,8BACI,cAACC,EAAD,U,GAJiBC,aCDjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,SAAW,yBAAyB,KAAO,wB","file":"static/js/main.2853f7a1.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\nimport React from 'react';\r\n\r\nimport Styles from './styles.module.css';\r\n\r\n/**\r\n * Recursively generate columns\r\n * \"aaaoobbeencrteiv\" - for testing\r\n */\r\nfunction generateCols(obj) {\r\n\tconst {a, b, count, character} = obj || {};\r\n\tif(!obj || !count) return null;\r\n\r\n\treturn (\r\n\t\t<li>\r\n\t\t\t<span>{ String(count) }</span>\r\n\t\t\t<ul>\r\n\t\t\t\t{\r\n\t\t\t\t\t!(a && b)\r\n\t\t\t\t\t\t? <span>{ String(character || \"\") }</span>\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\t\t\t\t{generateCols(a)}\r\n\t\t\t\t{generateCols(b)}\r\n\t\t\t</ul>\r\n\t\t</li>\r\n\t);\r\n}\r\n\r\nexport default (props) => {\r\n    const {\r\n        generationArray,\r\n    } = props;\r\n\r\n    // console.log(\"generationArray: \", generationArray);\r\n\r\n    return (\r\n\t\t<div className={Styles.mainCont}>\r\n\t\t\t<div className={Styles.tree}>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{generateCols(generationArray[0])}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</div>\r\n    );\r\n}","/* eslint-disable import/no-anonymous-default-export */\nimport React, { useState, useEffect } from 'react';\n\n// import Styles from './styles.module.css';\n\nimport GraphGenerator from './components/GraphGenerator';\n\n\n//Sort in descending order based on count\nconst comparatorObj = (a, b) => {\n    if(a.count === b.count) return 0;\n    if(a.count > b.count) return -1;\n    return 1;\n}\n\nconst comparator = (a, b, stats) => {\n    if(stats[a].count === stats[b].count) return 0;\n    if(stats[a].count > stats[b].count) return -1;\n    return 1;\n}\n\nconst getInitialHuffmanArray = (text) => {\n    if(!text || text === \"\") return [];\n    const mapOfFrequency = {};\n\n    for (var i = 0; i < text.length; i++) {\n        const char = text.charAt(i);\n\n        if(mapOfFrequency[char]) {\n            mapOfFrequency[char].count++;\n        } else {\n            mapOfFrequency[char] = { count: 1 };\n        }\n    }\n\n    const initialHuffmanArray = Object.keys(mapOfFrequency)\n        .sort((a, b) => comparator(a, b, mapOfFrequency))\n        .map(key => {\n            return {count: mapOfFrequency[key].count, character: key}\n        });\n\n    return initialHuffmanArray;\n}\n\nfunction getGenerationArray(initialHuffmanArray) {\n    const buffer = initialHuffmanArray.map(val => val); //Create copy to prevent array from overwriting\n    const maxIter = 100; //Prevent infinity loop\n    let iterCount = 0;\n\n    while (buffer.length > 1 && iterCount < maxIter) {\n        iterCount++;\n\n        //sort in desc order\n        buffer.sort(comparatorObj);\n\n        //Replace last two with a new one\n        const last = buffer.pop();\n        const prevLast = buffer.pop();\n        const newObj = {\n            a: prevLast,\n            b: last,\n            count: prevLast.count + last.count,\n        };\n\n        //paste a new one\n        buffer.push(newObj);\n    }\n\n    return buffer;\n}\n\nexport default () => {\n    const [text, setText] = useState(\"\");\n    const [generationArray, setGenerationArray] = useState([]);\n\n    useEffect(() => {\n        const initHuffmanArr = getInitialHuffmanArray(text);\n        const generationTreeObject = getGenerationArray(initHuffmanArr);\n        setGenerationArray(generationTreeObject);\n    }, [text]);\n\n    return (\n        <div>\n            <input\n                type=\"text\"\n                value={ text }\n                onChange={(e) => {\n                    //Check pattern manually\n                    const newText = String(e.target.value || \"\");\n                    const res = newText.replace(/[^A-Za-z0-9 ]/gi, '');;\n                    setText(res);\n                }}\n            />\n            <hr />\n            <GraphGenerator generationArray={ generationArray } />\n        </div>\n    );\n}","//vedor\nimport React, { Component } from 'react';\n\nimport { HuffmanCoding } from 'pages';\n\n\nexport default class App extends Component {\n    render() {\n        return (\n            <div>\n                <HuffmanCoding />\n            </div>\n        );\n    }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainCont\":\"styles_mainCont__1-RH5\",\"tree\":\"styles_tree__1PIow\"};"],"sourceRoot":""}